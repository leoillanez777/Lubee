// <auto-generated />
using Lubee.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Lubee.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240614082559_AddMimeData")]
    partial class AddMimeData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lubee.Models.Clasificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ambientes")
                        .HasColumnType("int");

                    b.Property<int>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M2")
                        .HasColumnType("int");

                    b.Property<int>("TipoOperacionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPropiedadId")
                        .HasColumnType("int");

                    b.Property<Point>("Ubicacion")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex("TipoOperacionId");

                    b.HasIndex("TipoPropiedadId");

                    b.ToTable("Clasificados");
                });

            modelBuilder.Entity("Lubee.Models.ClasificadoImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasificadoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClasificadoId");

                    b.ToTable("ClasificadoImagenes");
                });

            modelBuilder.Entity("Lubee.Models.TipoOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TiposOperaciones");
                });

            modelBuilder.Entity("Lubee.Models.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TiposPropiedades");
                });

            modelBuilder.Entity("Lubee.Models.Clasificado", b =>
                {
                    b.HasOne("Lubee.Models.TipoOperacion", "TipoOperacion")
                        .WithMany("Clasificados")
                        .HasForeignKey("TipoOperacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lubee.Models.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Clasificados")
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoOperacion");

                    b.Navigation("TipoPropiedad");
                });

            modelBuilder.Entity("Lubee.Models.ClasificadoImagen", b =>
                {
                    b.HasOne("Lubee.Models.Clasificado", "Clasificado")
                        .WithMany("ClasificadoImagen")
                        .HasForeignKey("ClasificadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasificado");
                });

            modelBuilder.Entity("Lubee.Models.Clasificado", b =>
                {
                    b.Navigation("ClasificadoImagen");
                });

            modelBuilder.Entity("Lubee.Models.TipoOperacion", b =>
                {
                    b.Navigation("Clasificados");
                });

            modelBuilder.Entity("Lubee.Models.TipoPropiedad", b =>
                {
                    b.Navigation("Clasificados");
                });
#pragma warning restore 612, 618
        }
    }
}
